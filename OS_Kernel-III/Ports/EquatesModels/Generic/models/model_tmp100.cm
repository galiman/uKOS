/*
; model_tmp100.
; =============

;------------------------------------------------------------------------
; Author:	Lorenzin Florence.	The 2017-04-13
; Modifs:
;
; SVN:
; $Author:: efr               $:  Author of last commit
; $Rev:: 166                  $:  Revision of last commit
; $Date:: 2017-07-02 17:51:46#$:  Date of last commit
;
; Project:	uKOS
; Goal:		Model for controlling the "tmp100" device.
;
;   (c) 1992-2017, Franzi Edo.
;   --------------------------
;                                              __ ______  _____
;   Franzi Edo.                         __  __/ //_/ __ \/ ___/
;   5-Route de Cheseaux                / / / / ,< / / / /\__ \
;   CH 1400 Cheseaux-NorÃ©az           / /_/ / /| / /_/ /___/ /
;                                     \__,_/_/ |_\____//____/
;   edo.franzi@ukos.ch
;
;   This program is free software: you can redistribute it and/or modify
;   it under the terms of the GNU Affero General Public License as published by
;   the Free Software Foundation, either version 3 of the License, or
;   (at your option) any later version.
;
;   This program is distributed in the hope that it will be useful,
;   but WITHOUT ANY WARRANTY; without even the implied warranty of
;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
;   GNU Affero General Public License for more details.
;
;   You should have received a copy of the GNU Affero General Public License
;   along with this program. If not, see <http://www.gnu.org/licenses/>.
;
;------------------------------------------------------------------------
*/

#include 	<TMP100/TMP100.h>

/*
 * \brief tmp100_init
 *
 * - Configure some specific parts
 *
 */
void	tmp100_init(void) {

	cb_configure();
}

/*
 * \brief tmp100_getTemperature
 *
 * - Get the temperature
 *
 */
void	tmp100_getTemperature(float64_t *temperature) {		
	int32_t		value;				

// Get the temperature 
// Scale it

	cb_readI2C0(&value);
	*temperature = ((float64_t)value) * 0.0625;
}

/*
 * \brief tmp100_setTemperature
 *
 * - Set the temperature
 *
 */
void	tmp100_setTemperature(float64_t temperature) {
	int32_t		value;

// Scale the temperature
// Save it

	value = (int32_t)(temperature / 0.0625);
	cb_writeI2C0(value);
}

